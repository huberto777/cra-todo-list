{"version":3,"sources":["assets/icons/pen.svg","assets/icons/rubbish-bin.svg","assets/icons/magnifier.svg","theme/GlobalStyle.js","theme/mainTheme.js","components/atoms/ButtonIcon/ButtonIcon.js","views/TaskItem.js","components/atoms/Heading/Heading.js","components/atoms/Input/Input.js","components/atoms/Button/Button.js","views/TaskUpdate.js","views/TaskSearch.js","views/TaskAdd.js","views/TaskList.js","views/Root.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","add","del","edit","update","grey100","grey200","grey300","grey400","black","light","bold","fontSize","xxs","xs","s","m","l","xl","ButtonIcon","styled","button","icon","css","TR","tr","TD","td","TaskItem","this","props","task","id","name","active","index","editTask","removeTask","activeMode","style","style2","width","backgroundColor","textDecoration","color","type","checked","onChange","onClick","penIcon","removeIcon","Component","Heading","h2","big","Input","input","regular","search","magnifierIcon","Button","cancel","BTN","TaskUpdate","editMode","onSubmit","defaultValue","TaskSearch","change","placeholder","TaskAdd","handleName","e","setState","target","value","state","length","addTask","StyledWrapper","table","HEADER","div","TH","th","StyledHeading","TaskList","tasks","filter","updateTask","preventDefault","updatedTask","map","searchTask","toLowerCase","bind","arguments","includes","key","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.01e3e631.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/rubbish-bin.5866c2c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,600');\r\n\r\n  *, *::before, *::after{\r\n      box-sizing: border-box;\r\n      /* css font antialliasing */\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  /* happy REM, czyli 1rem = 10px */\r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  add: 'hsl(49, 100%, 58%)',\r\n  del: 'hsl(0, 100%, 50%)',\r\n  edit: 'hsl(233, 100%, 50%)',\r\n  update: 'hsl(122, 100%, 58%)',\r\n  grey100: 'hsl(0, 0%, 96%)',\r\n  grey200: 'hsl(0, 0%, 90%)',\r\n  grey300: 'hsl(0, 0%, 70%)',\r\n  grey400: 'hsl(0, 6%, 28%)',\r\n  black: 'hsl(0, 0%, 0%)',\r\n  light: 300,\r\n  bold: 600,\r\n\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n};\r\n\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 50% 50%;\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.add};\r\n  border-radius: 10px;\r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport removeIcon from 'assets/icons/rubbish-bin.svg';\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.update};\r\n`;\r\n\r\nconst TD = styled.td`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nclass TaskItem extends Component {\r\n  render() {\r\n    const { id, name, active } = this.props.task;\r\n    const { index, editTask, removeTask, edit, activeMode } = this.props;\r\n    const style = {};\r\n    const style2 = { width: '15px' };\r\n    if (active) {\r\n      style.backgroundColor = 'yellow';\r\n      style.textDecoration = 'line-through';\r\n      style.color = 'red';\r\n    }\r\n    return (\r\n      <TR style={style}>\r\n        <TD style={style2}>{index + 1}.</TD>\r\n        <TD>\r\n          <input type=\"checkbox\" checked={active} onChange={() => activeMode(id)} /> {name}\r\n        </TD>\r\n        {edit || (\r\n          <>\r\n            <TD style={style2}>\r\n              <ButtonIcon onClick={() => editTask(id, name)} icon={penIcon} edit />\r\n            </TD>\r\n            <TD style={style2}>\r\n              <ButtonIcon onClick={() => removeTask(id)} icon={removeIcon} del />\r\n            </TD>\r\n          </>\r\n        )}\r\n      </TR>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Card);\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled, { css } from 'styled-components';\r\nimport magnifierIcon from 'assets/icons/magnifier.svg';\r\n\r\nconst Input = styled.input`\r\n  padding: 15px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.grey400};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.grey200};\r\n  margin-bottom: 10px;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.grey200};\r\n    padding-left: 5px;\r\n  }\r\n\r\n  ${({ search }) =>\r\n    search &&\r\n    css`\r\n      background-image: url(${magnifierIcon});\r\n      background-position: 10px 50%;\r\n      background-repeat: no-repeat;\r\n    `} /* input nie posiada atrybutu BEFORE, ponieważ nie posiada żadnej zawartości */\r\n`;\r\n\r\nexport default Input;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({ theme }) => theme.add}; /* props.theme -> CONTEXT API ThemeProvider */\r\n  width: 50px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  \r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n  ${({ cancel }) =>\r\n    cancel &&\r\n    css`\r\n      background-color: hsl(0, 6%, 28%);\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\n\r\nconst BTN = styled(Button)`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst TaskUpdate = ({ editMode, name, update }) => (\r\n  <form onSubmit={update}>\r\n    <Input defaultValue={name} name=\"updatedTask\" />\r\n    <BTN type=\"submit\" update>\r\n      UPDATE\r\n    </BTN>\r\n    <BTN onClick={editMode} cancel>\r\n      CANCEL\r\n    </BTN>\r\n  </form>\r\n);\r\n\r\nexport default TaskUpdate;\r\n","import React from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\n\r\nconst TaskSearch = ({change}) => (\r\n  <>\r\n    <Input placeholder=\"search\" search onChange={change} />\r\n  </>\r\n);\r\n\r\nexport default TaskSearch;\r\n","import React, { Component } from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst BTN = styled(Button)`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nclass TaskAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n    };\r\n  }\r\n  handleName = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  add = () => {\r\n    const { name } = this.state;\r\n    if (name.length < 3) return;\r\n    this.props.addTask(name);\r\n    this.setState({\r\n      name: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name } = this.state;\r\n    return (\r\n      <>\r\n        <Input placeholder=\"add task\" value={name} onChange={this.handleName} />\r\n        <BTN onClick={this.add}>ADD</BTN>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskAdd;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport TaskItem from './TaskItem';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport TaskUpdate from './TaskUpdate';\r\nimport TaskSearch from './TaskSearch';\r\nimport TaskAdd from './TaskAdd';\r\n\r\nconst StyledWrapper = styled.table`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst HEADER = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.add};\r\n`;\r\n\r\nconst TH = styled.th`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  text-align: center;\r\n`;\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        { id: 1, name: 'zainstalować linuxa', active: false },\r\n        { id: 2, name: 'zrobić spa w react', active: false },\r\n        { id: 3, name: 'nauczyć się reduxa', active: false },\r\n      ],\r\n      edit: false,\r\n      search: '',\r\n      id: 4,\r\n    };\r\n    this.editTask = this.editTask.bind(this);\r\n  }\r\n  removeTask = id => {\r\n    let tasks = [...this.state.tasks];\r\n    tasks = tasks.filter(task => task.id !== id);\r\n    this.setState({\r\n      tasks,\r\n    });\r\n  };\r\n  editTask() {\r\n    this.setState({\r\n      id: arguments[0],\r\n      name: arguments[1],\r\n      edit: !this.state.edit,\r\n    });\r\n    // console.log(arguments);\r\n  }\r\n  updateTask = e => {\r\n    e.preventDefault();\r\n    const updatedTask = e.target.updatedTask.value;\r\n    if (updatedTask.length < 3) return;\r\n    this.setState({\r\n      tasks: this.state.tasks.map(task => {\r\n        if (task.id === this.state.id) {\r\n          task.name = updatedTask;\r\n        }\r\n        return task;\r\n      }),\r\n      edit: false,\r\n    });\r\n  };\r\n  activeMode = id => {\r\n    this.setState({\r\n      tasks: this.state.tasks.map(task => {\r\n        if (task.id === id) {\r\n          task.active = !task.active;\r\n        }\r\n        return task;\r\n      }),\r\n    });\r\n  };\r\n  editMode = () => {\r\n    this.setState({\r\n      edit: !this.state.edit,\r\n    });\r\n  };\r\n  searchTask = e => {\r\n    this.setState({\r\n      search: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n  addTask = name => {\r\n    const { tasks } = this.state;\r\n    let task = {\r\n      id: this.state.id,\r\n      name,\r\n      active: false,\r\n    };\r\n    this.setState({\r\n      tasks: [...tasks, task],\r\n      id: this.state.id + 1\r\n    });\r\n  };\r\n  render() {\r\n    const { edit, search } = this.state;\r\n    let tasks = this.state.tasks.filter(task => task.name.toLowerCase().includes(search));\r\n    return (\r\n      <>\r\n        <StyledHeading big>Task list</StyledHeading>\r\n        {!edit ? (\r\n          <HEADER>\r\n            <TaskAdd addTask={this.addTask} />\r\n            <TaskSearch change={this.searchTask} />\r\n          </HEADER>\r\n        ) : (\r\n          <HEADER>\r\n            <TaskUpdate editMode={this.editMode} name={this.state.name} update={this.updateTask} />\r\n          </HEADER>\r\n        )}\r\n        <StyledWrapper>\r\n          <thead>\r\n            {tasks.length !== 0 ? (\r\n              <TR>\r\n                <TH>#</TH>\r\n                <TH>task</TH>\r\n                {edit || (\r\n                  <>\r\n                    <TH>edit</TH>\r\n                    <TH>del</TH>\r\n                  </>\r\n                )}\r\n              </TR>\r\n            ) : (\r\n              <TR>\r\n                <TH>brak zadań</TH>\r\n              </TR>\r\n            )}\r\n          </thead>\r\n\r\n          <tbody>\r\n            {tasks.map((task, index) => (\r\n              <TaskItem\r\n                task={task}\r\n                key={task.id}\r\n                index={index}\r\n                removeTask={this.removeTask}\r\n                editTask={this.editTask}\r\n                edit={edit}\r\n                activeMode={this.activeMode}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </StyledWrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'theme/GlobalStyle';\nimport { theme } from 'theme/mainTheme';\nimport TaskList from './TaskList';\n\nconst Root = () => (\n  <div>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <TaskList />\n    </ThemeProvider>\n  </div>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}