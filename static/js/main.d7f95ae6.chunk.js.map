{"version":3,"sources":["assets/icons/pen.svg","assets/icons/rubbish-bin.svg","assets/icons/magnifier.svg","theme/GlobalStyle.js","theme/mainTheme.js","api/FakeApi.js","components/atoms/Heading/Heading.js","components/atoms/ButtonIcon/ButtonIcon.js","views/TaskItem.js","components/atoms/Input/Input.js","components/atoms/Button/Button.js","views/TaskUpdate.js","views/TaskSearch.js","views/TaskAdd.js","views/TaskList.js","views/Root.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","add","del","edit","update","grey100","grey200","grey300","grey400","black","light","bold","fontSize","xxs","xs","s","m","l","xl","wait","ms","Promise","resolve","setTimeout","tasks","id","name","active","findIndexByAnId","result","findIndex","task","Error","FakeApi","getAllTasks","addTask","taskToAdd","addedTask","uuidv4","push","removeTask","taskToRemove","index","splice","replaceTask","taskToReplace","replacedTask","Heading","styled","h2","big","ButtonIcon","button","icon","css","TR","tr","TD","td","StyledButtonIcon","TaskItem","editTask","activeMode","style","style2","width","backgroundColor","textDecoration","color","type","defaultChecked","onChange","disabled","onClick","penIcon","removeIcon","Input","input","regular","search","magnifierIcon","Button","cancel","BTN","TaskUpdate","state","props","handleName","e","setState","target","value","handleSubmit","onUpdate","length","cancelEdit","this","Component","TaskSearch","change","placeholder","TaskAdd","StyledWrapper","table","HEADER","div","TH","th","StyledHeading","TaskList","then","prevState","filter","updateTask","taskToUpdate","updatedTask","map","editMode","searchTask","toLowerCase","loading","error","includes","key","Root","ReactDOM","render","document","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,unBCE3C,IAqBeC,EArBKC,YAAH,KCFJC,EAAQ,CACnBC,IAAK,qBACLC,IAAK,oBACLC,KAAM,sBACNC,OAAQ,sBACRC,QAAS,kBACTC,QAAS,kBACTC,QAAS,kBACTC,QAAS,kBACTC,MAAO,iBACPC,MAAO,IACPC,KAAM,IAENC,SAAU,CACRC,IAAK,OACLC,GAAI,SACJC,EAAG,SACHC,EAAG,SACHC,EAAG,SACHC,GAAI,S,0ECjBR,SAASC,IAAiB,IAAZC,EAAW,uDAAN,IACjB,OAAO,IAAIC,SAAQ,SAAAC,GACjBC,WAAWD,EAASF,MAIxB,IAAMI,EAAQ,CACZ,CAAEC,GAAI,EAAGC,KAAM,2BAAuBC,QAAQ,GAC9C,CAAEF,GAAI,EAAGC,KAAM,0BAAsBC,QAAQ,GAC7C,CAAEF,GAAI,EAAGC,KAAM,eAAgBC,QAAQ,GACvC,CAAEF,GAAI,EAAGC,KAAM,eAAgBC,QAAQ,IAGzC,SAASC,EAAgBH,GACvB,IAAMI,EAASL,EAAMM,WAAU,SAAAC,GAAI,OAAIA,EAAKN,KAAOA,KACnD,GAAII,EAAS,EACX,MAAM,IAAIG,MAAM,kCAElB,OAAOH,EAGT,IA8BeI,EA9BC,CACRC,YADQ,WACO,OAAD,oHACZf,IADY,0CAEPK,IAFO,8CAIdW,QALQ,SAKAC,GAAY,OAAD,0HACjBjB,EAAK,KADY,cAEjBkB,EAFiB,eAEAD,EAFA,CAEWX,GAAIa,gBACtCd,EAAMe,KAAKF,GAHY,kBAIhBA,GAJgB,8CAMnBG,WAXQ,SAWGC,GAAe,OAAD,6GACxBA,EAAahB,GADW,sBAErB,IAAIO,MAAM,oCAFW,OAIvBU,EAAQd,EAAgBa,EAAahB,IAC3CD,EAAMmB,OAAOD,EAAO,GALS,8CAOzBE,YAlBQ,SAkBIC,GAAgB,OAAD,4HACzB1B,EAAK,KADoB,UAE1B0B,EAAcpB,GAFY,sBAGvB,IAAIO,MAAM,qCAHa,cAKzBU,EAAQd,EAAgBiB,EAAcpB,IACtCqB,EANyB,eAMLD,GAC1BrB,EAAMkB,GAASI,EAPgB,kBAQxBA,GARwB,+C,+GCvCnC,IAKeC,EALCC,IAAOC,GAAV,KACE,gBAAGjD,EAAH,EAAGA,MAAH,SAAUkD,IAAiBlD,EAAMY,SAASM,GAAKlB,EAAMY,SAASK,KAC5D,qBAAGjB,MAAkBW,Q,2qBCFtC,IA6BewC,EA7BIH,IAAOI,OAAV,KAGU,qBAAGC,QAKP,qBAAGrD,MAAkBC,OAGvC,qBAAGC,KAEHoD,YADG,QAIH,qBAAGnD,MAEHmD,YADI,QAIJ,qBAAGlD,QAEHkD,YADM,Q,yYClBV,IAAMC,EAAKP,IAAOQ,GAAV,KAEc,qBAAGxD,MAAkBI,UAGrCqD,EAAKT,IAAOU,GAAV,KAKFC,EAAmBX,YAAOG,EAAPH,CAAH,KAmCPY,EA7BE,SAAC,GAAqE,IAAnElB,EAAkE,EAAlEA,MAAOhB,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,OAAQkC,EAA6C,EAA7CA,SAAUrB,EAAmC,EAAnCA,WAAYrC,EAAuB,EAAvBA,KAAM2D,EAAiB,EAAjBA,WAC7DC,EAAQ,GACRC,EAAS,CAAEC,MAAO,QAMxB,OALItC,IACFoC,EAAMG,gBAAkB,SACxBH,EAAMI,eAAiB,eACvBJ,EAAMK,MAAQ,OAGd,kBAACb,EAAD,CAAIQ,MAAOA,GACT,kBAACN,EAAD,CAAIM,MAAOC,GAAStB,EAAQ,EAA5B,KACA,kBAACe,EAAD,KACE,2BAAOY,KAAK,WAAWC,eAAgB3C,EAAQ4C,SAAUT,EAAYU,SAAUrE,IAC9EuB,GAEFvB,GACC,oCACE,kBAACsD,EAAD,CAAIM,MAAOC,GACT,kBAACL,EAAD,CAAkBc,QAASZ,EAAUR,KAAMqB,IAASvE,MAAI,KAE1D,kBAACsD,EAAD,CAAIM,MAAOC,GACT,kBAACL,EAAD,CAAkBc,QAASjC,EAAYa,KAAMsB,IAAYzE,KAAG,Q,+pBCxCxE,IA0Be0E,EA1BD5B,IAAO6B,MAAV,KAEI,qBAAG7E,MAAkBY,SAASG,KAC5B,qBAAGf,MAAkB8E,WAChB,qBAAG9E,MAAkBQ,WAGhC,qBAAGR,MAAkBM,WAMnB,qBAAGN,MAAkBM,WAI9B,qBAAGyE,QAEHzB,YADM,IAEoB0B,Q,g1BCrB9B,IAmCeC,GAnCAjC,IAAOI,OAAV,KACU,qBAAGpD,MAAkBC,OAYvC,qBAAGC,KAEHoD,YADG,QAIH,qBAAGnD,MAEHmD,YADI,QAIJ,qBAAGlD,QAEHkD,YADM,QAIN,qBAAG4B,QAEH5B,YADM,Q,kIC1BV,IAAM6B,GAAMnC,YAAOiC,GAAPjC,CAAH,MAuCMoC,G,4MAhCbC,MAAQ,CACN3D,KAAM,EAAK4D,MAAMvD,KAAKL,M,EAExB6D,WAAa,SAAAC,GACX,EAAKC,SAAS,CACZ/D,KAAM8D,EAAEE,OAAOC,S,EAGnBC,aAAe,WAAO,IACZlE,EAAS,EAAK2D,MAAd3D,KADW,EAEQ,EAAK4D,MAAxBO,EAFW,EAEXA,SAAU9D,EAFC,EAEDA,KAEdL,EAAKoE,OAAS,GAClBD,EAAS,eAAK9D,EAAN,CAAYL,W,uDAEZ,IACAqE,EAAeC,KAAKV,MAApBS,WACArE,EAASsE,KAAKX,MAAd3D,KACR,OACE,oCACE,kBAAC,EAAD,CAAOiE,MAAOjE,EAAM6C,SAAUyB,KAAKT,aACnC,kBAACJ,GAAD,CAAKd,KAAK,SAASjE,QAAM,EAACqE,QAASuB,KAAKJ,cAAxC,UAGA,kBAACT,GAAD,CAAKV,QAASsB,EAAYb,QAAM,GAAhC,e,GAzBiBe,aCFVC,GANI,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OACjB,oCACE,kBAAC,EAAD,CAAOC,YAAY,SAASrB,QAAM,EAACR,SAAU4B,M,kICAjD,IAAMhB,GAAMnC,YAAOiC,GAAPjC,CAAH,MAqCMqD,G,kDA9Bb,WAAYf,GAAQ,IAAD,8BACjB,cAAMA,IAKRC,WAAa,SAAAC,GACX,EAAKC,SAAS,CACZ/D,KAAM8D,EAAEE,OAAOC,SARA,EAWnB1F,IAAM,WAAO,IACHyB,EAAS,EAAK2D,MAAd3D,KACJA,EAAKoE,OAAS,IAClB,EAAKR,MAAMnD,QAAQ,CAAET,OAAMC,QAAQ,IACnC,EAAK8D,SAAS,CACZ/D,KAAM,OAdR,EAAK2D,MAAQ,CACX3D,KAAM,IAHS,E,qDAmBT,IACAA,EAASsE,KAAKX,MAAd3D,KACR,OACE,oCACE,kBAAC,EAAD,CAAO0E,YAAY,WAAWT,MAAOjE,EAAM6C,SAAUyB,KAAKT,aAC1D,kBAAC,GAAD,CAAKd,QAASuB,KAAK/F,KAAnB,Y,GAzBcgG,a,giBCFtB,IAAMK,GAAgBtD,IAAOuD,MAAV,MAKbC,GAASxD,IAAOyD,IAAV,MAKNlD,GAAKP,IAAOQ,GAAV,MAEc,qBAAGxD,MAAkBC,OAGrCyG,GAAK1D,IAAO2D,GAAV,MAKFC,GAAgB5D,YAAOD,EAAPC,CAAH,MA8IJ6D,G,kDAzIb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAsBRnD,QAAU,SAAAC,GACRH,EAAQE,QAAQC,GAAW0E,MAAK,SAAAzE,GAAS,OACvC,EAAKoD,UAAS,SAAAsB,GAAS,MAAK,CAC1BvF,MAAM,GAAD,mBAAMuF,EAAUvF,OAAhB,CAAuBa,YA1Bf,EA+BnBG,WAAa,SAAAC,GACXR,EAAQO,WAAWC,GAAcqE,MAAK,kBACpC,EAAKrB,UAAS,SAAAsB,GAEZ,MAAO,CAAEvF,MADKuF,EAAUvF,MAAMwF,QAAO,SAAAjF,GAAI,OAAIA,EAAKN,KAAOgB,EAAahB,cAlCzD,EAwCnBoC,SAAW,SAAA9B,GACT,EAAK0D,SAAS,CACZ1D,OACA5B,MAAM,KA3CS,EA+CnB8G,WAAa,SAAAC,GACXjF,EAAQW,YAAYsE,GAAcJ,MAAK,SAAAK,GAAW,OAChD,EAAK1B,UAAS,SAAAsB,GAIZ,MAAO,CAAEvF,MAHKuF,EAAUvF,MAAM4F,KAAI,SAAArF,GAAI,OACpCA,EAAKN,KAAO0F,EAAY1F,GAAK0F,EAAcpF,KAE7B5B,MAAM,UArDT,EA0DnB2D,WAAa,SAAArC,GACX,EAAKgE,UAAS,SAAAsB,GAAS,MAAK,CAC1BvF,MAAOuF,EAAUvF,MAAM4F,KAAI,SAAArF,GAIzB,OAHIA,EAAKN,KAAOA,IACdM,EAAKJ,QAAUI,EAAKJ,QAEfI,UAhEM,EAqEnBsF,SAAW,WACT,EAAK5B,UAAS,SAAAsB,GAAS,MAAK,CAC1B5G,MAAO4G,EAAU5G,UAvEF,EA2EnBmH,WAAa,SAAA9B,GACX,EAAKC,SAAS,CACZV,OAAQS,EAAEE,OAAOC,MAAM4B,iBA3EzB,EAAKlC,MAAQ,CACX7D,MAAO,CACL,CAAEC,GAAI,EAAGC,KAAM,2BAAuBC,QAAQ,GAC9C,CAAEF,GAAI,EAAGC,KAAM,0BAAsBC,QAAQ,GAC7C,CAAEF,GAAI,EAAGC,KAAM,eAAgBC,QAAQ,GACvC,CAAEF,GAAI,EAAGC,KAAM,eAAgBC,QAAQ,IAEzC6F,SAAS,EACTC,MAAO,KACPtH,MAAM,EACN4E,OAAQ,IAZO,E,qDAiFT,IAAD,SACwBiB,KAAKX,MAA5BlF,EADD,EACCA,KAAM4E,EADP,EACOA,OAAQhD,EADf,EACeA,KAChBP,EAAQwE,KAAKX,MAAM7D,MAAMwF,QAAO,SAAAjF,GAAI,OAAIA,EAAKL,KAAK6F,cAAcG,SAAS3C,MAC/E,OACE,oCACE,kBAAC6B,GAAD,CAAe1D,KAAG,GAAlB,aACE/C,EAMA,kBAACqG,GAAD,KACE,kBAAC,GAAD,CAAYT,WAAYC,KAAKqB,SAAUtF,KAAMA,EAAM8D,SAAUG,KAAKiB,cANpE,kBAACT,GAAD,KACE,kBAAC,GAAD,CAASrE,QAAS6D,KAAK7D,UACvB,kBAAC,GAAD,CAAYgE,OAAQH,KAAKsB,cAO7B,kBAAChB,GAAD,KACE,+BACoB,IAAjB9E,EAAMsE,OACL,kBAAC,GAAD,KACE,kBAACY,GAAD,UACA,kBAACA,GAAD,aACCvG,GACC,oCACE,kBAACuG,GAAD,aACA,kBAACA,GAAD,cAKN,kBAAC,GAAD,KACE,kBAACA,GAAD,0BAKN,+BACGlF,EAAM4F,KAAI,SAACrF,EAAMW,GAAP,OACT,kBAAC,EAAD,CACEhB,KAAMK,EAAKL,KACXC,OAAQI,EAAKJ,OACbgG,IAAK5F,EAAKN,GACViB,MAAOA,EACPF,WAAY,kBAAM,EAAKA,WAAWT,IAClC8B,SAAU,kBAAM,EAAKA,SAAS9B,IAC9B5B,KAAMA,EACN2D,WAAY,kBAAM,EAAKA,WAAW/B,EAAKN,iB,GAhIhCwE,aClBR2B,GATF,kBACX,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAe5H,MAAOA,GACpB,kBAAC,GAAD,SCNN6H,IAASC,OAAO,kBAAC,GAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.d7f95ae6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/rubbish-bin.5866c2c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,600');\r\n\r\n  *, *::before, *::after{\r\n      box-sizing: border-box;\r\n      /* css font antialliasing */\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  /* happy REM, czyli 1rem = 10px */\r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  add: 'hsl(49, 100%, 58%)',\r\n  del: 'hsl(0, 100%, 50%)',\r\n  edit: 'hsl(233, 100%, 50%)',\r\n  update: 'hsl(122, 100%, 58%)',\r\n  grey100: 'hsl(0, 0%, 96%)',\r\n  grey200: 'hsl(0, 0%, 90%)',\r\n  grey300: 'hsl(0, 0%, 70%)',\r\n  grey400: 'hsl(0, 6%, 28%)',\r\n  black: 'hsl(0, 0%, 0%)',\r\n  light: 300,\r\n  bold: 600,\r\n\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n};\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction wait(ms = 1000) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n\r\nconst tasks = [\r\n  { id: 1, name: 'zainstalowaÄ‡ linuxa', active: false },\r\n  { id: 2, name: 'zrobiÄ‡ spa w react', active: false },\r\n  { id: 3, name: 'nauka reduxa', active: false },\r\n  { id: 4, name: 'nauka js es6', active: false },\r\n];\r\n\r\nfunction findIndexByAnId(id) {\r\n  const result = tasks.findIndex(task => task.id === id);\r\n  if (result < 0) {\r\n    throw new Error('Task o podanym id nie istnieje');\r\n  }\r\n  return result;\r\n}\r\n\r\nconst FakeApi = {\r\n  async getAllTasks() {\r\n    await wait();\r\n    return [...tasks];\r\n  },\r\n  async addTask(taskToAdd) {\r\n    await wait(1000);\r\n    const addedTask = { ...taskToAdd, id: uuidv4() };\r\n    tasks.push(addedTask);\r\n    return addedTask;\r\n  },\r\n  async removeTask(taskToRemove) {\r\n    if (!taskToRemove.id) {\r\n      throw new Error('Cannot remove task without an id');\r\n    }\r\n    const index = findIndexByAnId(taskToRemove.id);\r\n    tasks.splice(index, 1);\r\n  },\r\n  async replaceTask(taskToReplace) {\r\n    await wait(1000);\r\n    if (!taskToReplace.id) {\r\n      throw new Error('cannot replace task without an id');\r\n    }\r\n    const index = findIndexByAnId(taskToReplace.id);\r\n    const replacedTask = { ...taskToReplace };\r\n    tasks[index] = replacedTask;\r\n    return replacedTask;\r\n  },\r\n};\r\n\r\nexport default FakeApi;\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 50% 50%;\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.add};\r\n  border-radius: 10px;\r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport removeIcon from 'assets/icons/rubbish-bin.svg';\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.update};\r\n`;\r\n\r\nconst TD = styled.td`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  display: block;\r\n`;\r\n\r\nconst TaskItem = ({ index, name, active, editTask, removeTask, edit, activeMode }) => {\r\n  const style = {};\r\n  const style2 = { width: '15px' };\r\n  if (active) {\r\n    style.backgroundColor = 'yellow';\r\n    style.textDecoration = 'line-through';\r\n    style.color = 'red';\r\n  }\r\n  return (\r\n    <TR style={style}>\r\n      <TD style={style2}>{index + 1}.</TD>\r\n      <TD>\r\n        <input type=\"checkbox\" defaultChecked={active} onChange={activeMode} disabled={edit} />\r\n        {name}\r\n      </TD>\r\n      {edit || (\r\n        <>\r\n          <TD style={style2}>\r\n            <StyledButtonIcon onClick={editTask} icon={penIcon} edit />\r\n          </TD>\r\n          <TD style={style2}>\r\n            <StyledButtonIcon onClick={removeTask} icon={removeIcon} del />\r\n          </TD>\r\n        </>\r\n      )}\r\n    </TR>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import styled, { css } from 'styled-components';\r\nimport magnifierIcon from 'assets/icons/magnifier.svg';\r\n\r\nconst Input = styled.input`\r\n  padding: 15px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.grey400};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.grey200};\r\n  margin-bottom: 10px;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.grey200};\r\n    padding-left: 5px;\r\n  }\r\n\r\n  ${({ search }) =>\r\n    search &&\r\n    css`\r\n      background-image: url(${magnifierIcon});\r\n      background-position: 10px 50%;\r\n      background-repeat: no-repeat;\r\n    `} /* input nie posiada atrybutu BEFORE, poniewaÅ¼ nie posiada Å¼adnej zawartoÅ›ci */\r\n`;\r\n\r\nexport default Input;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({ theme }) => theme.add}; /* props.theme -> CONTEXT API ThemeProvider */\r\n  width: 50px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  \r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n  ${({ cancel }) =>\r\n    cancel &&\r\n    css`\r\n      background-color: hsl(0, 6%, 28%);\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\n\r\nconst BTN = styled(Button)`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nclass TaskUpdate extends Component {\r\n  state = {\r\n    name: this.props.task.name,\r\n  };\r\n  handleName = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  handleSubmit = () => {\r\n    const { name } = this.state;\r\n    const { onUpdate, task } = this.props;\r\n\r\n    if (name.length < 3) return;\r\n    onUpdate({ ...task, name });\r\n  };\r\n  render() {\r\n    const { cancelEdit } = this.props;\r\n    const { name } = this.state;\r\n    return (\r\n      <>\r\n        <Input value={name} onChange={this.handleName} />\r\n        <BTN type=\"submit\" update onClick={this.handleSubmit}>\r\n          UPDATE\r\n        </BTN>\r\n        <BTN onClick={cancelEdit} cancel>\r\n          CANCEL\r\n        </BTN>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskUpdate;\r\n","import React from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\n\r\nconst TaskSearch = ({change}) => (\r\n  <>\r\n    <Input placeholder=\"search\" search onChange={change} />\r\n  </>\r\n);\r\n\r\nexport default TaskSearch;\r\n","import React, { Component } from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\n\r\nconst BTN = styled(Button)`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nclass TaskAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n    };\r\n  }\r\n  handleName = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  add = () => {\r\n    const { name } = this.state;\r\n    if (name.length < 3) return;\r\n    this.props.addTask({ name, active: false });\r\n    this.setState({\r\n      name: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name } = this.state;\r\n    return (\r\n      <>\r\n        <Input placeholder=\"add task\" value={name} onChange={this.handleName} />\r\n        <BTN onClick={this.add}>ADD</BTN>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskAdd;\r\n","import React, { Component } from 'react';\r\nimport FakeApi from 'api/FakeApi';\r\nimport styled from 'styled-components';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport TaskItem from './TaskItem';\r\nimport TaskUpdate from './TaskUpdate';\r\nimport TaskSearch from './TaskSearch';\r\nimport TaskAdd from './TaskAdd';\r\n\r\nconst StyledWrapper = styled.table`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst HEADER = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.add};\r\n`;\r\n\r\nconst TH = styled.th`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  text-align: center;\r\n`;\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        { id: 1, name: 'zainstalowaÄ‡ linuxa', active: false },\r\n        { id: 2, name: 'zrobiÄ‡ spa w react', active: false },\r\n        { id: 3, name: 'nauka reduxa', active: false },\r\n        { id: 4, name: 'nauka js es6', active: false },\r\n      ],\r\n      loading: true,\r\n      error: null,\r\n      edit: false,\r\n      search: '',\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   FakeApi.getAllTasks()\r\n  //     .then(tasks => this.setState({ tasks }))\r\n  //     .catch(error => this.state({ error }))\r\n  //     .finally(() => this.setState({ loading: false }));\r\n  // }\r\n\r\n  addTask = taskToAdd => {\r\n    FakeApi.addTask(taskToAdd).then(addedTask =>\r\n      this.setState(prevState => ({\r\n        tasks: [...prevState.tasks, addedTask],\r\n      })),\r\n    );\r\n  };\r\n\r\n  removeTask = taskToRemove => {\r\n    FakeApi.removeTask(taskToRemove).then(() =>\r\n      this.setState(prevState => {\r\n        const tasks = prevState.tasks.filter(task => task.id !== taskToRemove.id);\r\n        return { tasks };\r\n      }),\r\n    );\r\n  };\r\n\r\n  editTask = task => {\r\n    this.setState({\r\n      task,\r\n      edit: true,\r\n    });\r\n  };\r\n\r\n  updateTask = taskToUpdate => {\r\n    FakeApi.replaceTask(taskToUpdate).then(updatedTask =>\r\n      this.setState(prevState => {\r\n        const tasks = prevState.tasks.map(task =>\r\n          task.id === updatedTask.id ? updatedTask : task,\r\n        );\r\n        return { tasks, edit: false };\r\n      }),\r\n    );\r\n  };\r\n\r\n  activeMode = id => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task => {\r\n        if (task.id === id) {\r\n          task.active = !task.active;\r\n        }\r\n        return task;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  editMode = () => {\r\n    this.setState(prevState => ({\r\n      edit: !prevState.edit,\r\n    }));\r\n  };\r\n\r\n  searchTask = e => {\r\n    this.setState({\r\n      search: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { edit, search, task } = this.state;\r\n    const tasks = this.state.tasks.filter(task => task.name.toLowerCase().includes(search));\r\n    return (\r\n      <>\r\n        <StyledHeading big>Task list</StyledHeading>\r\n        {!edit ? (\r\n          <HEADER>\r\n            <TaskAdd addTask={this.addTask} />\r\n            <TaskSearch change={this.searchTask} />\r\n          </HEADER>\r\n        ) : (\r\n          <HEADER>\r\n            <TaskUpdate cancelEdit={this.editMode} task={task} onUpdate={this.updateTask} />\r\n          </HEADER>\r\n        )}\r\n        <StyledWrapper>\r\n          <thead>\r\n            {tasks.length !== 0 ? (\r\n              <TR>\r\n                <TH>#</TH>\r\n                <TH>task</TH>\r\n                {edit || (\r\n                  <>\r\n                    <TH>edit</TH>\r\n                    <TH>del</TH>\r\n                  </>\r\n                )}\r\n              </TR>\r\n            ) : (\r\n              <TR>\r\n                <TH>brak zadaÅ„</TH>\r\n              </TR>\r\n            )}\r\n          </thead>\r\n\r\n          <tbody>\r\n            {tasks.map((task, index) => (\r\n              <TaskItem\r\n                name={task.name}\r\n                active={task.active}\r\n                key={task.id}\r\n                index={index}\r\n                removeTask={() => this.removeTask(task)}\r\n                editTask={() => this.editTask(task)}\r\n                edit={edit}\r\n                activeMode={() => this.activeMode(task.id)}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </StyledWrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport GlobalStyle from 'theme/GlobalStyle';\r\nimport { theme } from 'theme/mainTheme';\r\nimport TaskList from './TaskList';\r\n\r\nconst Root = () => (\r\n  <div>\r\n    <GlobalStyle />\r\n    <ThemeProvider theme={theme}>\r\n      <TaskList />\r\n    </ThemeProvider>\r\n  </div>\r\n);\r\n\r\nexport default Root;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from 'views/Root';\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\n"],"sourceRoot":""}