{"version":3,"sources":["assets/icons/pen.svg","assets/icons/rubbish-bin.svg","assets/icons/magnifier.svg","theme/GlobalStyle.js","theme/mainTheme.js","components/atoms/Heading/Heading.js","components/atoms/ButtonIcon/ButtonIcon.js","views/TaskItem.js","components/atoms/Input/Input.js","components/atoms/Button/Button.js","views/TaskUpdate.js","views/TaskSearch.js","views/TaskAdd.js","views/TaskList.js","views/Root.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","theme","add","del","edit","update","grey100","grey200","grey300","grey400","black","light","bold","fontSize","xxs","xs","s","m","l","xl","Heading","styled","h2","big","ButtonIcon","button","icon","css","TR","tr","TD","td","StyledButtonIcon","TaskItem","index","name","active","editTask","removeTask","activeMode","style","style2","width","backgroundColor","textDecoration","color","type","defaultChecked","onChange","disabled","onClick","penIcon","removeIcon","Input","input","regular","search","magnifierIcon","Button","cancel","BTN","TaskUpdate","state","props","handleName","e","setState","target","value","id","updateTask","length","cancelEdit","this","Component","TaskSearch","change","placeholder","TaskAdd","addTask","uuidv4","StyledWrapper","table","HEADER","div","TH","th","StyledHeading","TaskList","prevState","tasks","filter","task","updatedTask","map","editMode","searchTask","toLowerCase","addedTask","includes","key","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.44a75f16.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/rubbish-bin.5866c2c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css?family=Montserrat:300,600');\r\n\r\n  *, *::before, *::after{\r\n      box-sizing: border-box;\r\n      /* css font antialliasing */\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n  }\r\n  \r\n  /* happy REM, czyli 1rem = 10px */\r\n  html {\r\n    font-size: 62.5%; \r\n  }\r\n  \r\n  body {\r\n    font-size: 1.6rem;\r\n    font-family: \"Montserrat\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const theme = {\r\n  add: 'hsl(49, 100%, 58%)',\r\n  del: 'hsl(0, 100%, 50%)',\r\n  edit: 'hsl(233, 100%, 50%)',\r\n  update: 'hsl(122, 100%, 58%)',\r\n  grey100: 'hsl(0, 0%, 96%)',\r\n  grey200: 'hsl(0, 0%, 90%)',\r\n  grey300: 'hsl(0, 0%, 70%)',\r\n  grey400: 'hsl(0, 6%, 28%)',\r\n  black: 'hsl(0, 0%, 0%)',\r\n  light: 300,\r\n  bold: 600,\r\n\r\n  fontSize: {\r\n    xxs: '1rem',\r\n    xs: '1.2rem',\r\n    s: '1.6rem',\r\n    m: '2.1rem',\r\n    l: '2.4rem',\r\n    xl: '4rem',\r\n  },\r\n};\r\n\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 50% 50%;\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.add};\r\n  border-radius: 10px;\r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport removeIcon from 'assets/icons/rubbish-bin.svg';\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.update};\r\n`;\r\n\r\nconst TD = styled.td`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  display: block;\r\n`;\r\n\r\nconst TaskItem = ({ index, name, active, editTask, removeTask, edit, activeMode }) => {\r\n  const style = {};\r\n  const style2 = { width: '15px' };\r\n  if (active) {\r\n    style.backgroundColor = 'yellow';\r\n    style.textDecoration = 'line-through';\r\n    style.color = 'red';\r\n  }\r\n  return (\r\n    <TR style={style}>\r\n      <TD style={style2}>{index + 1}.</TD>\r\n      <TD>\r\n        <input type=\"checkbox\" defaultChecked={active} onChange={activeMode} disabled={edit} />\r\n        {name}\r\n      </TD>\r\n      {edit || (\r\n        <>\r\n          <TD style={style2}>\r\n            <StyledButtonIcon onClick={editTask} icon={penIcon} edit />\r\n          </TD>\r\n          <TD style={style2}>\r\n            <StyledButtonIcon onClick={removeTask} icon={removeIcon} del />\r\n          </TD>\r\n        </>\r\n      )}\r\n    </TR>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import styled, { css } from 'styled-components';\r\nimport magnifierIcon from 'assets/icons/magnifier.svg';\r\n\r\nconst Input = styled.input`\r\n  padding: 15px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.grey400};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.grey200};\r\n  margin-bottom: 10px;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.grey200};\r\n    padding-left: 5px;\r\n  }\r\n\r\n  ${({ search }) =>\r\n    search &&\r\n    css`\r\n      background-image: url(${magnifierIcon});\r\n      background-position: 10px 50%;\r\n      background-repeat: no-repeat;\r\n    `} /* input nie posiada atrybutu BEFORE, ponieważ nie posiada żadnej zawartości */\r\n`;\r\n\r\nexport default Input;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({ theme }) => theme.add}; /* props.theme -> CONTEXT API ThemeProvider */\r\n  width: 50px;\r\n  height: 30px;\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: 'Montserrat';\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  text-transform: uppercase;\r\n  color: white;\r\n  \r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n  ${({ cancel }) =>\r\n    cancel &&\r\n    css`\r\n      background-color: hsl(0, 6%, 28%);\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\n\r\nconst BTN = styled(Button)`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nclass TaskUpdate extends Component {\r\n  state = {\r\n    name: this.props.name,\r\n  };\r\n  handleName = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  update = () => {\r\n    const { name } = this.state;\r\n    const { id, updateTask } = this.props;\r\n    if(name.length < 3) return;\r\n    updateTask(id, { id, name });\r\n  };\r\n  render() {\r\n    const { cancelEdit } = this.props;\r\n    const { name } = this.state;\r\n    return (\r\n      <>\r\n        <Input value={name} onChange={this.handleName} />\r\n        <BTN type=\"submit\" update onClick={this.update}>\r\n          UPDATE\r\n        </BTN>\r\n        <BTN onClick={cancelEdit} cancel>\r\n          CANCEL\r\n        </BTN>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskUpdate;\r\n","import React from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\n\r\nconst TaskSearch = ({change}) => (\r\n  <>\r\n    <Input placeholder=\"search\" search onChange={change} />\r\n  </>\r\n);\r\n\r\nexport default TaskSearch;\r\n","import React, { Component } from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst BTN = styled(Button)`\r\n  width: 100px;\r\n  height: 50px;\r\n  margin-right: 10px;\r\n`;\r\n\r\nclass TaskAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n    };\r\n  }\r\n  handleName = e => {\r\n    this.setState({\r\n      name: e.target.value,\r\n    });\r\n  };\r\n  add = () => {\r\n    const { name } = this.state;\r\n    if (name.length < 3) return;\r\n    this.props.addTask({id: uuidv4(), name, active: false});\r\n    this.setState({\r\n      name: '',\r\n    });\r\n  };\r\n  render() {\r\n    const { name } = this.state;\r\n    return (\r\n      <>\r\n        <Input placeholder=\"add task\" value={name} onChange={this.handleName} />\r\n        <BTN onClick={this.add}>ADD</BTN>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskAdd;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport TaskItem from './TaskItem';\r\nimport TaskUpdate from './TaskUpdate';\r\nimport TaskSearch from './TaskSearch';\r\nimport TaskAdd from './TaskAdd';\r\n\r\nconst StyledWrapper = styled.table`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst HEADER = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.add};\r\n`;\r\n\r\nconst TH = styled.th`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  text-align: center;\r\n`;\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        { id: 1, name: 'zainstalować linuxa', active: false },\r\n        { id: 2, name: 'zrobić spa w react', active: false },\r\n        { id: 3, name: 'nauka reduxa', active: false },\r\n        { id: 4, name: 'nauka js es6', active: false },\r\n      ],\r\n      edit: false,\r\n      search: '',\r\n    };\r\n  }\r\n  removeTask = id => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.filter(task => task.id !== id),\r\n    }));\r\n  };\r\n  editTask = ({ id, name }) => {\r\n    this.setState({\r\n      id,\r\n      name,\r\n      edit: true,\r\n    });\r\n  };\r\n  updateTask = (id, updatedTask) => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task => (task.id === id ? updatedTask : task)),\r\n      edit: false,\r\n    }));\r\n  };\r\n  activeMode = id => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task => {\r\n        if (task.id === id) {\r\n          task.active = !task.active;\r\n        }\r\n        return task;\r\n      }),\r\n    }));\r\n  };\r\n  editMode = () => {\r\n    this.setState(prevState => ({\r\n      edit: !prevState.edit,\r\n    }));\r\n  };\r\n  searchTask = e => {\r\n    this.setState({\r\n      search: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n  addTask = addedTask => {\r\n    this.setState(prevState => ({\r\n      tasks: [addedTask, ...prevState.tasks],\r\n    }));\r\n  };\r\n  render() {\r\n    const { edit, search, id, name } = this.state;\r\n    const tasks = this.state.tasks.filter(task => task.name.toLowerCase().includes(search));\r\n    return (\r\n      <>\r\n        <StyledHeading big>Task list</StyledHeading>\r\n        {!edit ? (\r\n          <HEADER>\r\n            <TaskAdd addTask={this.addTask} />\r\n            <TaskSearch change={this.searchTask} />\r\n          </HEADER>\r\n        ) : (\r\n          <HEADER>\r\n            <TaskUpdate\r\n              cancelEdit={this.editMode}\r\n              id={id}\r\n              name={name}\r\n              updateTask={this.updateTask}\r\n            />\r\n          </HEADER>\r\n        )}\r\n        <StyledWrapper>\r\n          <thead>\r\n            {tasks.length !== 0 ? (\r\n              <TR>\r\n                <TH>#</TH>\r\n                <TH>task</TH>\r\n                {edit || (\r\n                  <>\r\n                    <TH>edit</TH>\r\n                    <TH>del</TH>\r\n                  </>\r\n                )}\r\n              </TR>\r\n            ) : (\r\n              <TR>\r\n                <TH>brak zadań</TH>\r\n              </TR>\r\n            )}\r\n          </thead>\r\n\r\n          <tbody>\r\n            {tasks.map((task, index) => (\r\n              <TaskItem\r\n                name={task.name}\r\n                active={task.active}\r\n                key={task.id}\r\n                index={index}\r\n                removeTask={() => this.removeTask(task.id)}\r\n                editTask={() => this.editTask(task)}\r\n                edit={edit}\r\n                activeMode={() => this.activeMode(task.id)}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </StyledWrapper>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'theme/GlobalStyle';\nimport { theme } from 'theme/mainTheme';\nimport TaskList from './TaskList';\n\nconst Root = () => (\n  <div>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>\n      <TaskList />\n    </ThemeProvider>\n  </div>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}