{"version":3,"sources":["assets/icons/pen.svg","assets/icons/rubbish-bin.svg","assets/icons/magnifier.svg","assets/icons/iks.svg","api/FakeApi.js","components/atoms/Heading/Heading.js","components/atoms/ButtonIcon/ButtonIcon.js","components/atoms/Input/Input.js","components/atoms/Paragraph/Paragraph.js","views/TaskUpdate.js","views/TaskItem.js","components/atoms/Button/Button.js","views/TaskSearch.js","views/TaskAdd.js","views/TaskList.js"],"names":["module","exports","wait","ms","Promise","resolve","setTimeout","tasks","id","name","active","findIndexByAnId","result","findIndex","task","Error","FakeApi","getAllTasks","addTask","taskToAdd","addedTask","uuidv4","push","removeTask","taskToRemove","index","splice","replaceTask","taskToReplace","replacedTask","Heading","styled","h2","theme","big","fontSize","xl","l","bold","ButtonIcon","button","icon","add","del","css","edit","update","cancel","Input","input","s","regular","grey400","grey200","search","magnifierIcon","Paragraph","p","StyledButtonIcon","StyledParagraph","TD","td","StyledInput","validate","values","errors","length","TaskUpdate","onUpdate","onCancel","formik","useFormik","initialValues","onSubmit","style2","width","type","value","onChange","handleChange","style","onClick","handleSubmit","penIcon","iksIcon","TR","tr","TaskItem","currentEditTask","editMode","onDelete","onEdit","onActive","backgroundColor","textDecoration","color","className","defaultChecked","disabled","removeIcon","Button","TaskSearch","placeholder","TaskAdd","resetForm","StyledWrapper","table","HEADER","div","TH","th","StyledHeading","TaskList","props","then","setState","prevState","filter","editTask","updateTask","taskToUpdate","updatedTask","map","activeMode","cancelEditMode","searchTask","e","target","toLowerCase","state","loading","error","catch","finally","this","includes","key","Component"],"mappings":"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","file":"static/js/4.49e245ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/rubbish-bin.5866c2c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/iks.e9cecb62.svg\";","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction wait(ms = 1000) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms);\r\n  });\r\n}\r\n\r\nconst tasks = [\r\n  { id: 1, name: 'zainstalowaÄ‡ linuxa', active: false },\r\n  { id: 2, name: 'zrobiÄ‡ spa w react', active: false },\r\n  { id: 3, name: 'nauka reduxa', active: false },\r\n  { id: 4, name: 'nauka js es6', active: false },\r\n];\r\n\r\nfunction findIndexByAnId(id) {\r\n  const result = tasks.findIndex(task => task.id === id);\r\n  if (result < 0) {\r\n    throw new Error('Task o podanym id nie istnieje');\r\n  }\r\n  return result;\r\n}\r\n\r\nconst FakeApi = {\r\n  async getAllTasks() {\r\n    await wait();\r\n    return [...tasks];\r\n  },\r\n  async addTask(taskToAdd) {\r\n    await wait(1000);\r\n    const addedTask = { ...taskToAdd, id: uuidv4() };\r\n    tasks.push(addedTask);\r\n    return addedTask;\r\n  },\r\n  async removeTask(taskToRemove) {\r\n    if (!taskToRemove.id) {\r\n      throw new Error('Cannot remove task without an id');\r\n    }\r\n    const index = findIndexByAnId(taskToRemove.id);\r\n    tasks.splice(index, 1);\r\n  },\r\n  async replaceTask(taskToReplace) {\r\n    await wait(1000);\r\n    if (!taskToReplace.id) {\r\n      throw new Error('cannot replace task without an id');\r\n    }\r\n    const index = findIndexByAnId(taskToReplace.id);\r\n    const replacedTask = { ...taskToReplace };\r\n    tasks[index] = replacedTask;\r\n    return replacedTask;\r\n  },\r\n};\r\n\r\nexport default FakeApi;\r\n","import styled from 'styled-components';\r\n\r\nconst Heading = styled.h2`\r\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n`;\r\n\r\nexport default Heading;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst ButtonIcon = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  background-image: url(${({ icon }) => icon});\r\n  background-repeat: no-repeat;\r\n  background-position: 50% 50%;\r\n  background-size: 50% 50%;\r\n  border: none;\r\n  background-color: ${({ theme }) => theme.add};\r\n  border-radius: 10px;\r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n    ${({ cancel }) =>\r\n      cancel &&\r\n      css`\r\n        background-color: hsl(0, 6%, 68%);\r\n      `}\r\n`;\r\n\r\nexport default ButtonIcon;\r\n","import styled, { css } from 'styled-components';\r\nimport magnifierIcon from 'assets/icons/magnifier.svg';\r\n\r\nconst Input = styled.input`\r\n  padding: 5px 10px 5px 30px;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  background-color: ${({ theme }) => theme.grey400};\r\n  border-radius: 50px;\r\n  border: none;\r\n  color: ${({ theme }) => theme.grey200};\r\n  margin-bottom: 10px;\r\n  width: 40%;\r\n\r\n  ::placeholder {\r\n    text-transform: uppercase;\r\n    letter-spacing: 1px;\r\n    color: ${({ theme }) => theme.grey200};\r\n    padding-left: 5px;\r\n  }\r\n\r\n  ${({ search }) =>\r\n    search &&\r\n    css`\r\n      background-image: url(${magnifierIcon});\r\n      background-position: 10px 50%;\r\n      background-repeat: no-repeat;\r\n    `} /* input nie posiada atrybutu BEFORE, poniewaÅ¼ nie posiada Å¼adnej zawartoÅ›ci */\r\n`;\r\n\r\nexport default Input;\r\n","import styled from 'styled-components';\r\n\r\nconst Paragraph = styled.p`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.regular};\r\n`;\r\n\r\nexport default Paragraph;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport iksIcon from 'assets/icons/iks.svg';\r\nimport { useFormik } from 'formik';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  display: block;\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  color: ${({ theme }) => theme.del};\r\n  margin: 0;\r\n`;\r\n\r\nconst TD = styled.td`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  padding: 0 0 0 10px;\r\n  margin: 0;\r\n  width: 100%;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n`;\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length > 50) {\r\n    errors.name = 'Must be 50 characters or less';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min. 3 characters';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst TaskUpdate = ({ task, onUpdate, onCancel, index }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: task.name,\r\n    },\r\n    validate,\r\n    onSubmit: ({ name }) => {\r\n      onUpdate({ ...task, name });\r\n    },\r\n  });\r\n  const style2 = { width: '15px' };\r\n  return (\r\n    <>\r\n      <TD>{index + 1}</TD>\r\n      <TD>\r\n        <StyledInput\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formik.values.name}\r\n          onChange={formik.handleChange}\r\n        />{' '}\r\n        {formik.errors.name ? <StyledParagraph>{formik.errors.name}</StyledParagraph> : null}\r\n      </TD>\r\n\r\n      <TD style={style2}>\r\n        <StyledButtonIcon type=\"submit\" onClick={formik.handleSubmit} icon={penIcon} add />\r\n      </TD>\r\n      <TD style={style2}>\r\n        <StyledButtonIcon type=\"submit\" onClick={onCancel} icon={iksIcon} cancel />\r\n      </TD>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskUpdate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ButtonIcon from 'components/atoms/ButtonIcon/ButtonIcon';\r\nimport penIcon from 'assets/icons/pen.svg';\r\nimport removeIcon from 'assets/icons/rubbish-bin.svg';\r\nimport TaskUpdate from './TaskUpdate';\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.update};\r\n`;\r\n\r\nconst TD = styled.td`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  cursor: pointer;\r\n  margin: 0 auto;\r\n  display: block;\r\n`;\r\n\r\nconst TaskItem = ({\r\n  index,\r\n  task,\r\n  currentEditTask,\r\n  editMode,\r\n  onDelete,\r\n  onEdit,\r\n  onActive,\r\n  onUpdate,\r\n  onCancel,\r\n}) => {\r\n  const { id, name, active } = task;\r\n  const style = {};\r\n  const style2 = { width: '15px' };\r\n  if (active) {\r\n    style.backgroundColor = 'yellow';\r\n    style.textDecoration = 'line-through';\r\n    style.color = 'red';\r\n  }\r\n  return (\r\n    <>\r\n      {currentEditTask === id ? (\r\n        <TR>\r\n          <TaskUpdate onCancel={onCancel} task={task} onUpdate={onUpdate} index={index} />\r\n        </TR>\r\n      ) : (\r\n        <TR style={style} className={`${editMode ? 'inactive' : ''}`}>\r\n          <TD style={style2}>{index + 1}.</TD>\r\n          <TD>\r\n            <input\r\n              type=\"checkbox\"\r\n              defaultChecked={active}\r\n              onChange={onActive}\r\n              disabled={editMode}\r\n            />\r\n            {name}\r\n          </TD>\r\n          <TD style={style2}>\r\n            <StyledButtonIcon onClick={onEdit} icon={penIcon} disabled={editMode} edit />\r\n          </TD>\r\n          <TD style={style2}>\r\n            <StyledButtonIcon onClick={onDelete} icon={removeIcon} disabled={editMode} del />\r\n          </TD>\r\n        </TR>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskItem;\r\n","import styled, { css } from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  background-color: ${({ theme }) => theme.add}; /* props.theme -> CONTEXT API ThemeProvider */\r\n  width: 20%;\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  border: none;\r\n  border-radius: 50px;\r\n  font-family: 'Montserrat';\r\n  font-weight: ${({ theme }) => theme.regular};\r\n  text-transform: uppercase;\r\n  color: white;\r\n  padding: 5px 10px 5px 10px;\r\n\r\n  ${({ del }) =>\r\n    del &&\r\n    css`\r\n      background-color: hsl(0, 100%, 50%);\r\n    `}\r\n  ${({ edit }) =>\r\n    edit &&\r\n    css`\r\n      background-color: hsl(233, 100%, 50%);\r\n    `}\r\n  ${({ update }) =>\r\n    update &&\r\n    css`\r\n      background-color: hsl(122, 100%, 58%);\r\n    `}\r\n  ${({ cancel }) =>\r\n    cancel &&\r\n    css`\r\n      background-color: hsl(0, 6%, 28%);\r\n    `}\r\n`;\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport Input from 'components/atoms/Input/Input';\r\n\r\nconst TaskSearch = ({ onChange }) => (\r\n  <>\r\n    <Input placeholder=\"search\" search onChange={onChange} />\r\n  </>\r\n);\r\n\r\nexport default TaskSearch;\r\n","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport Input from 'components/atoms/Input/Input';\r\nimport Button from 'components/atoms/Button/Button';\r\nimport TaskSearch from 'views/TaskSearch';\r\nimport Paragraph from 'components/atoms/Paragraph/Paragraph';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  font-size: ${({ theme }) => theme.fontSize.s};\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  color: ${({ theme }) => theme.del};\r\n  margin: 0;\r\n`;\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if (!values.name) {\r\n    errors.name = 'Required';\r\n  } else if (values.name.length < 3) {\r\n    errors.name = 'Must have min. 3 characters';\r\n  } else if (values.name.length > 50) {\r\n    errors.name = 'Must have max. 50 characters';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst TaskAdd = ({ addTask, onChange }) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: '',\r\n    },\r\n    validate,\r\n    onSubmit: (values, { resetForm }) => {\r\n      addTask(values);\r\n      resetForm();\r\n    },\r\n  });\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Input\r\n        id=\"name\"\r\n        name=\"name\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.name}\r\n        placeholder=\"add task\"\r\n      />\r\n      <Button type=\"submit\">Submit</Button>\r\n      <TaskSearch onChange={onChange} />\r\n      {formik.errors.name ? <StyledParagraph>{formik.errors.name}</StyledParagraph> : null}\r\n    </form>\r\n  );\r\n};\r\n\r\n// class TaskAdd extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       name: '',\r\n//     };\r\n//   }\r\n//   handleName = e => {\r\n//     this.setState({\r\n//       name: e.target.value,\r\n//     });\r\n//   };\r\n//   add = () => {\r\n//     const { name } = this.state;\r\n//     if (name.length < 3) return;\r\n//     this.props.addTask({ name, active: false });\r\n//     this.setState({\r\n//       name: '',\r\n//     });\r\n//   };\r\n//   render() {\r\n//     const { name } = this.state;\r\n//     return (\r\n//       <>\r\n//         <Input placeholder=\"add task\" value={name} onChange={this.handleName} />\r\n//         <Button onClick={this.add}>ADD</Button>\r\n//       </>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default TaskAdd;\r\n","import React, { Component } from 'react';\r\nimport FakeApi from 'api/FakeApi';\r\nimport styled from 'styled-components';\r\nimport Heading from 'components/atoms/Heading/Heading';\r\nimport TaskItem from './TaskItem';\r\nimport TaskAdd from './TaskAdd';\r\n\r\nconst StyledWrapper = styled.table`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst HEADER = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst TR = styled.tr`\r\n  height: 35px;\r\n  background-color: ${({ theme }) => theme.add};\r\n`;\r\n\r\nconst TH = styled.th`\r\n  padding-right: 5px;\r\n  padding-left: 5px;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  text-align: center;\r\n`;\r\n\r\nclass TaskList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks: [\r\n        { id: 1, name: 'zainstalowaÄ‡ linuxa', active: false },\r\n        { id: 2, name: 'zrobiÄ‡ spa w react', active: false },\r\n        { id: 3, name: 'nauka reduxa', active: false },\r\n        { id: 4, name: 'nauka js es6', active: false },\r\n      ],\r\n      loading: true,\r\n      error: null,\r\n      editMode: false,\r\n      search: '',\r\n      currentEditTask: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    FakeApi.getAllTasks()\r\n      .then(tasks => this.setState({ tasks }))\r\n      .catch(error => this.state({ error }))\r\n      .finally(() => this.setState({ loading: false }));\r\n  }\r\n\r\n  addTask = taskToAdd => {\r\n    FakeApi.addTask(taskToAdd).then(addedTask =>\r\n      this.setState(prevState => ({\r\n        tasks: [...prevState.tasks, addedTask],\r\n      })),\r\n    );\r\n  };\r\n\r\n  removeTask = taskToRemove => {\r\n    FakeApi.removeTask(taskToRemove).then(() =>\r\n      this.setState(prevState => {\r\n        const tasks = prevState.tasks.filter(task => task.id !== taskToRemove.id);\r\n        return { tasks };\r\n      }),\r\n    );\r\n  };\r\n\r\n  editTask = task => {\r\n    this.setState({\r\n      task,\r\n      editMode: true,\r\n      currentEditTask: task.id,\r\n    });\r\n  };\r\n\r\n  updateTask = taskToUpdate => {\r\n    FakeApi.replaceTask(taskToUpdate).then(updatedTask =>\r\n      this.setState(prevState => {\r\n        const tasks = prevState.tasks.map(task =>\r\n          task.id === updatedTask.id ? updatedTask : task,\r\n        );\r\n        return { tasks, editMode: false, currentEditTask: null };\r\n      }),\r\n    );\r\n  };\r\n\r\n  activeMode = ({ id }) => {\r\n    this.setState(prevState => ({\r\n      tasks: prevState.tasks.map(task => {\r\n        if (task.id === id) {\r\n          task.active = !task.active;\r\n        }\r\n        return task;\r\n      }),\r\n    }));\r\n  };\r\n\r\n  cancelEditMode = () => {\r\n    this.setState({\r\n      editMode: false,\r\n      currentEditTask: null,\r\n    });\r\n  };\r\n\r\n  searchTask = e => {\r\n    this.setState({\r\n      search: e.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { editMode, search, currentEditTask, loading } = this.state;\r\n    const tasks = this.state.tasks.filter(task => task.name.toLowerCase().includes(search));\r\n    return (\r\n      <>\r\n        <StyledHeading big>Task List</StyledHeading>\r\n        {!editMode && (\r\n          <HEADER>\r\n            <TaskAdd addTask={this.addTask} onChange={this.searchTask} />\r\n          </HEADER>\r\n        )}\r\n        {loading ? (\r\n          'tasks are loading...'\r\n        ) : (\r\n          <StyledWrapper>\r\n            <thead>\r\n              {tasks.length !== 0 ? (\r\n                <TR>\r\n                  <TH>#</TH>\r\n                  <TH>task</TH>\r\n                  <TH>edit</TH>\r\n                  <TH>del</TH>\r\n                </TR>\r\n              ) : (\r\n                <TR>\r\n                  <TH>brak zadaÅ„</TH>\r\n                </TR>\r\n              )}\r\n            </thead>\r\n\r\n            <tbody>\r\n              {tasks.map((task, index) => (\r\n                <TaskItem\r\n                  key={task.id}\r\n                  index={index}\r\n                  task={task}\r\n                  currentEditTask={currentEditTask}\r\n                  editMode={editMode}\r\n                  onDelete={() => this.removeTask(task)}\r\n                  onEdit={() => this.editTask(task)}\r\n                  onActive={() => this.activeMode(task)}\r\n                  onUpdate={this.updateTask}\r\n                  onCancel={this.cancelEditMode}\r\n                />\r\n              ))}\r\n            </tbody>\r\n          </StyledWrapper>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n"],"sourceRoot":""}